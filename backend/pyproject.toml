[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false
description = "Management Cockpit CRM API"

[tool.poetry.dependencies]
python = "^3.11"
Django = "^5.2"
djangorestframework = "^3.15"
django-filter = "^24.3"
djangorestframework-simplejwt = "^5.3"
drf-spectacular = { version = "^0.27.2", extras = ["sidecar"] }
psycopg2-binary = "^2.9"
gunicorn = "^23.0"
whitenoise = "^6.7"         
django-jazzmin = "^3.0.0"     

[tool.poetry.group.dev.dependencies]
pytest = "^8.3"
pytest-django = "^4.9"
pytest-cov = "^5.0"
model-bakery = "^1.18"
black = "^24.8"
isort = "^5.13"
flake8 = "^7.1"
coverage = "^7.6"
flake8-bugbear = "^24.12.12"
flake8-comprehensions = "^3.17.0"
pep8-naming = "^0.15.1"
pre-commit = "^4.3.0"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["config", "apps"]
include_trailing_comma = true
multi_line_output = 3
combine_as_imports = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203"]
exclude = [".git", ".venv", "venv", "__pycache__", "*/migrations/*"]
select = ["E", "F", "W"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.ci"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-ra -q --strict-markers"
markers = [
  "unit: fast isolated tests",
  "integration: DB and API tests",
  "e2e: end-to-end tests",
]
filterwarnings = [
  "ignore::django.utils.deprecation.RemovedInDjango60Warning",
]

[tool.coverage.run]
source = ["apps", "config"]
branch = true
parallel = true
omit = ["*/migrations/*", "*/tests/*", "manage.py", "config/asgi.py", "config/wsgi.py"]

[tool.coverage.paths]
source = ["apps", "config", "/app/apps", "/app/config"]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 80
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "def __repr__",
  "raise NotImplementedError",
]
